{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AutocompleteHandler } from '../autocomplete';\nimport { ECCategory } from '../firebase/database.service';\nimport { combineLatestWith } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\n\nfunction AddDialogComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name cannot be empty. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddDialogComponent_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const package_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", package_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", package_r5, \" \");\n  }\n}\n\nfunction AddDialogComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r6, \" \");\n  }\n}\n\nfunction AddDialogComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Category cannot be empty. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AddDialogComponent = /*#__PURE__*/(() => {\n  class AddDialogComponent {\n    constructor(dialogRef, component) {\n      this.dialogRef = dialogRef;\n      this.title = 'Add Component';\n      this.categories = [ECCategory.ADAPTER, ECCategory.ADC, ECCategory.CONNECTOR, ECCategory.EEPROM, ECCategory.IC, ECCategory.MICROCONTROLLER, ECCategory.MISC, ECCategory.MODULE, ECCategory.PASSIVE, ECCategory.REGULATOR, ECCategory.REGULATOR_IC, ECCategory.SENSOR, ECCategory.TRANSISTOR];\n      this.uuid = uuidv4();\n      this.position = 0;\n      this.nameControl = new FormControl('', [Validators.required]);\n      this.countControl = new FormControl(1);\n      this.packageControl = new FormControl('');\n      this.categoryControl = new FormControl(undefined, [Validators.required]);\n      this.descriptionControl = new FormControl('');\n      this.linkControl = new FormControl(''); // controls = new Map<string, FormControl>([\n      //   ['name', new FormControl('', [Validators.required])],\n      //   ['category', new FormControl('', [Validators.required])],\n      //   ['package', new FormControl('')],\n      // ]);\n\n      this.yesEnabled = false;\n      this.packageAutocomplete = new AutocompleteHandler(['SIP', 'DIP', 'CDIP', 'QIP', 'SOP', 'TO-3', 'TO-5', 'TO-18', 'TO-39', 'TO-46', 'TO-66', 'TO-92', 'TO-99', 'TO-100', 'TO-126', 'TO-220', 'TO-226', 'TO-247', 'TO-251', 'TO-252', 'TO-262', 'TO-263', 'TO-274'], this.packageControl);\n\n      if (component) {\n        this.title = 'Edit Component';\n        this.uuid = component.id;\n        this.position = component.position;\n        this.nameControl.setValue(component.name);\n        this.countControl.setValue(component.count);\n        this.packageControl.setValue(component.package);\n        this.categoryControl.setValue(component.category);\n        this.descriptionControl.setValue(component.description);\n        this.linkControl.setValue(component.link); // } else {\n        // this.title = 'Add Component';\n        // component = {\n        //   id: this.uuid,\n        //   position: this.position,\n        //   name: this.nameControl.value,\n        //   count: this.countControl.value,\n        //   package: this.packageControl.value,\n        //   category: this.categoryControl.value,\n        //   description: this.descriptionControl.value,\n        //   link: this.linkControl.value,\n        // };\n      } // Object.keys(component).forEach((key) => {\n      //   const value = component[key];\n      //   console.log('controls: ', key, this.controls.has(key));\n      //   if (this.controls.has(key)) {\n      //     this.controls.get(key).setValue(value);\n      //   } else {\n      //     this.controls[key] = new FormControl(value);\n      //   }\n      // });\n      // console.log('controls', this.controls);\n\n    }\n\n    ngOnInit() {\n      this.packageAutocomplete.init();\n      this.nameControl.statusChanges.pipe(combineLatestWith(this.categoryControl.statusChanges)).subscribe(([a, b]) => {\n        console.log('status', a, b);\n        this.yesEnabled = !this.hasError();\n      });\n      this.nameControl.updateValueAndValidity();\n      this.categoryControl.updateValueAndValidity();\n    }\n\n    onYesClick() {\n      if (this.hasError()) {\n        return;\n      }\n\n      this.dialogRef.close({\n        id: this.uuid,\n        position: this.position,\n        name: this.nameControl.value,\n        count: this.countControl.value,\n        package: this.packageControl.value,\n        category: this.categoryControl.value,\n        description: this.descriptionControl.value,\n        link: this.linkControl.value\n      });\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n    hasError() {\n      return this.nameControl.invalid || this.categoryControl.invalid;\n    }\n\n  }\n\n  AddDialogComponent.ɵfac = function AddDialogComponent_Factory(t) {\n    return new (t || AddDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  AddDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddDialogComponent,\n    selectors: [[\"add-dialog\"]],\n    decls: 39,\n    vars: 15,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"formControl\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"1\", 3, \"formControl\"], [\"matInput\", \"\", 3, \"matAutocomplete\", \"formControl\"], [\"autoActiveFirstOption\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"category\", 3, \"formControl\"], [\"matInput\", \"\", \"type\", \"url\", 3, \"formControl\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\"], [3, \"value\"]],\n    template: function AddDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"mat-form-field\", 2)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, AddDialogComponent_mat_error_7_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Count\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 2)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Package\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 6);\n        i0.ɵɵelementStart(16, \"mat-autocomplete\", 7, 8);\n        i0.ɵɵtemplate(18, AddDialogComponent_mat_option_18_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵpipe(19, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"mat-form-field\", 2)(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-select\", 10);\n        i0.ɵɵtemplate(24, AddDialogComponent_mat_option_24_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, AddDialogComponent_mat_error_25_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 2)(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-form-field\", 2)(31, \"mat-label\");\n        i0.ɵɵtext(32, \"Link\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 12)(35, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AddDialogComponent_Template_button_click_35_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵtext(36, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function AddDialogComponent_Template_button_click_37_listener() {\n          return ctx.onYesClick();\n        });\n        i0.ɵɵtext(38, \" Save \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(17);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.nameControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nameControl.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.countControl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1)(\"formControl\", ctx.packageControl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 13, ctx.packageAutocomplete.filteredValues));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.categoryControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.categoryControl.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.descriptionControl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.linkControl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.yesEnabled);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.MinValidator, i4.MatAutocomplete, i4.MatAutocompleteTrigger, i5.MatOption, i6.MatButton, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i7.MatError, i7.MatFormField, i7.MatLabel, i8.MatInput, i9.MatSelect, i3.FormControlDirective, i2.AsyncPipe],\n    styles: [\".mat-form-field[_ngcontent-%COMP%]{padding-left:2px;padding-right:2px}\"]\n  });\n  return AddDialogComponent;\n})();\nexport let DeleteDialogComponent = /*#__PURE__*/(() => {\n  class DeleteDialogComponent {}\n\n  DeleteDialogComponent.ɵfac = function DeleteDialogComponent_Factory(t) {\n    return new (t || DeleteDialogComponent)();\n  };\n\n  DeleteDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeleteDialogComponent,\n    selectors: [[\"delete-dialog\"]],\n    decls: 7,\n    vars: 0,\n    consts: [[\"mat-button\", \"\", \"mat-dialog-close\", \"false\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"true\"]],\n    template: function DeleteDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-dialog-content\");\n        i0.ɵɵtext(1, \" Are you sure you want to delete this component? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-actions\")(3, \"button\", 0);\n        i0.ɵɵtext(4, \"No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 1);\n        i0.ɵɵtext(6, \"Yes\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i6.MatButton, i1.MatDialogClose, i1.MatDialogContent, i1.MatDialogActions],\n    encapsulation: 2\n  });\n  return DeleteDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}